{"ast":null,"code":"import _objectSpread from \"/Users/christian/Documents/booksbooksbooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/christian/Documents/booksbooksbooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/christian/Documents/booksbooksbooks/client/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Detail(props) {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formObject = _useState4[0],\n        setFormObject = _useState4[1]; // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  } // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.googleSearch(formObject.title).then(res => setBooks(res.data.items)).catch(err => console.log(err));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-12\",\n        children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              onChange: handleInputChange,\n              name: \"title\",\n              placeholder: \"Title (required)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormBtn, {\n              disabled: !formObject.title,\n              onClick: handleFormSubmit,\n              children: \"Submit Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/books/saved\",\n          children: \"\\u2190 Back to Authors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Detail, \"GPvYQ/ecf1bLC11I2f+aBS5tT0Q=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/christian/Documents/booksbooksbooks/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","useParams","Col","Row","Container","Jumbotron","API","Input","TextArea","FormBtn","Detail","props","books","setBooks","formObject","setFormObject","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","googleSearch","then","res","data","items","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,oBACKZ,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACda,KADc;AAAA,QACPC,QADO;;AAAA,qBAEed,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEde,UAFc;AAAA,QAEFC,aAFE,kBAIrB;;;AACA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,0BACRA,KAAK,CAACC,MADE;AAAA,UACxBC,IADwB,iBACxBA,IADwB;AAAA,UAClBC,KADkB,iBAClBA,KADkB;AAEhCL,IAAAA,aAAa,iCAAMD,UAAN;AAAkB,OAACK,IAAD,GAAQC;AAA1B,OAAb;AACD,GARoB,CAUrB;AACA;;;AACA,WAASC,gBAAT,CAA0BJ,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIR,UAAU,CAACS,KAAf,EAAsB;AACpBjB,MAAAA,GAAG,CAACkB,YAAJ,CAAiBV,UAAU,CAACS,KAA5B,EACGE,IADH,CACSC,GAAD,IAASb,QAAQ,CAACa,GAAG,CAACC,IAAJ,CAASC,KAAV,CADzB,EAEGC,KAFH,CAEUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGD;AACF;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,QAAQ,EAAEd,iBADZ;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,OAAD;AAAS,cAAA,QAAQ,EAAE,CAACF,UAAU,CAACS,KAA/B;AAAsC,cAAA,OAAO,EAAEF,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,MAAV;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/CQX,M;;KAAAA,M;AAiDT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Detail(props) {\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({});\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title) {\n      API.googleSearch(formObject.title)\n        .then((res) => setBooks(res.data.items))\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <FormBtn disabled={!formObject.title} onClick={handleFormSubmit}>\n                Submit Book\n              </FormBtn>\n            </form>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"md-2\">\n          <Link to=\"/books/saved\">‚Üê Back to Authors</Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}